// Controller Manager - Handles controller registration and execution

sanctuary ControllerManager {

    soul __genesis__(app) {
        this.app = app
        this.controllers = {}
    }

    // Register a controller
    soul register(name, controller) {
        this.controllers[name] = controller
        if (controller.setApp) {
            controller.setApp(this.app)
        }
        return this.app // Return app for chaining
    }

    // Get a registered controller
    soul get(name) {
        if (!this.controllers) {
            return null
        }
        return this.controllers[name]
    }

    // Create a route handler from a controller method
    soul createHandler(controllerName, methodName) {
        app = this.app

        return soul(req, res, next) {
            try {
                controller = app.getController(controllerName)

                if (!controller) {
                    return res.status(500).json({
                        error: "Internal Server Error", 
                        message: "Controller '" + controllerName + "' not found"
                    })
                }

                // This is a simplified way to call methods.
                // A more robust implementation would use reflection or a dispatch table.
                if (methodName == "login") {
                    controller.login(req, res)
                } else if (methodName == "register") {
                    controller.register(req, res)
                } else if (methodName == "verify") {
                    controller.verify(req, res)
                } else {
                    return res.status(500).json({
                        error: "Internal Server Error", 
                        message: "Method '" + methodName + "' not supported"
                    })
                }

            } catch (error) {
                Console.log("‚ùå Controller error: " + error)
                return res.status(500).json({
                    error: "Internal Server Error", 
                    message: "Error executing controller method"
                })
            }
        }
    }
}
